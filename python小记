1、Python divmod() 函数
  python divmod() 函数把除数和余数运算结果结合起来，返回一个包含商和余数的元组(a // b, a % b)。
  实例
  >>>divmod(7, 2)
  (3, 1)
 2、python __repr__ __str__的区别
      类的订制
      两者都是用来实现类的订制

      __repr__ 在使用内建函数 repr()进自动调用

    __str__ 在使用print()进自动调用

    好的习惯把这两个定制方法进行重写,从而在输出显示时更方便
  https://baijiahao.baidu.com/s?id=1596817611604972751&wfr=spider&for=pc
 3、python-int()
      int(x, [base])
      作用：
      将一个数字或base类型的字符串转换成整数。
      int(x=0)
      int(x, base=10)，base缺省值为10，也就是说不指定base的值时，函数将x按十进制处理。
      注：
      1. x 可以是数字或字符串，但是base被赋值后 x 只能是字符串
      2. x 作为字符串时必须是 base 类型，也就是说 x 变成数字时必须能用 base 进制表示
4、abs()
  abs() 函数返回数字的绝对值。
5、[::-1]
  b = a[i:j:s]这种格式呢，i,j与上面的一样，但s表示步进，缺省为1.
  所以a[i:j:1]相当于a[i:j]
  当s<0时，i缺省时，默认为-1. j缺省时，默认为-len(a)-1
  所以a[::-1]相当于 a[-1:-len(a)-1:-1]，也就是从最后一个元素到第一个元素复制一遍。所以你看到一个倒序的东东。
6、re模块
  https://www.cnblogs.com/tina-python/p/5508402.html
7、字符串strip()函数
  那么str.strip()就是把这个字符串头和尾的空格，以及位于头尾的\n \t之类给删掉。
  还有一种用法，strip()还有一种用法是str.strip(c)，其中c也是一个字符或者一个字符串。它删除的是str字符串从头开始或者从
  尾开始带有c含有的字符的所有字符（确实拗口）
  比如：
  str='hiahia ohoh haha ihih'
则str.strip('hai') 就会为 ' ohoh haha '
为什么呢？
首先看str的头：第一个字母是h,包含在'hai'中，删掉。继续第二个字母是i包含在'hai'中，删掉。以此类推，一直到第一个空格，
不包含在'hai'中。停止删除。再看str的尾巴：第一个字母是h，包含在'hai'中，删除。第二个字母i，包含在'hai'中，删除。
以此类推，直到倒数第一个空格，停止删除。至于中间到底有什么字母，都不管了。只要外围碰到不需要删除的字符，屠杀就结束了。
8、Python3 join()方法
  Python join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串。
  join()方法语法：
str.join(sequence)
#对序列进行操作（分别使用' '与':'作为分隔符）
>>> seq1 = ['hello','good','boy','doiido']
>>> print ' '.join(seq1)
hello good boy doiido
>>> print ':'.join(seq1)
hello:good:boy:doiido
#对字符串进行操作
>>> seq2 = "hello good boy doiido"
>>> print ':'.join(seq2)
h:e:l:l:o: :g:o:o:d: :b:o:y: :d:o:i:i:d:o  
#对元组进行操作
>>> seq3 = ('hello','good','boy','doiido')
>>> print ':'.join(seq3)
hello:good:boy:doiido 
#对字典进行操作
>>> seq4 = {'hello':1,'good':2,'boy':3,'doiido':4}
>>> print ':'.join(seq4)
boy:good:doiido:hello
#合并目录
>>> import os
>>> os.path.join('/hello/','good/boy/','doiido')
'/hello/good/boy/doiido'
9、格式化输出
  print('index=%d,step=%d' %(index,step))
  print('index={},step={}'.format(index,step))
有些时候，字符串里面的%是一个普通字符怎么办？这个时候就需要转义，用%%来表示一个%：
>>> 'growth rate: %d %%' % 7
'growth rate: 7 %'
另一种格式化字符串的方法是使用字符串的format()方法，它会用传入的参数依次替换字符串内的占位符{0}、{1}……
>>> 'Hello, {0}, 成绩提升了 {1:.1f}%'.format('小明', 17.125)
'Hello, 小明, 成绩提升了 17.1%'
